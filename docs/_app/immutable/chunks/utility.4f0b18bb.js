const y={"all-alphanumeric":"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789","upper-alphanumeric":"ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789","lower-alphanumeric":"abcdefghijklmnopqrstuvwxyz0123456789","all-alpha":"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ","caps-alpha":"ABCDEFGHIJKLMNOPQRSTUVWXYZ","lower-alpha":"abcdefghijklmnopqrstuvwxyz",numeric:"0123456789"};function k(e,i="upper-alphanumeric"){let s="";const r=y[i],l=r.length;for(let o=0;o<e;o++)s+=r.charAt(Math.floor(Math.random()*l));return s}function a(e,i){return Math.floor(Math.random()*(i-e))+e}async function f(e){return new Promise(i=>{setTimeout(i,e)})}function m(e,i=!1){const s={day:86400,hour:3600,minute:60,second:1};i&&(s.second=1);const r={};let l=e;for(const[t,p]of Object.entries(s)){const d=Math.floor(l/p);l-=d*p,r[t]=d}const o=[];for(const[t,p]of Object.entries(r))if(p!==0){const d=p>1?"s":"";o.push(`${p} ${t}${d}`)}let n=o.join(", ");const h=n.split(",").length-1;if(h!==0)if(h===1)n=n.replace(", "," and ");else{let t=n.split("").reverse().join("");t=t.replace(" ,"," dna ,"),n=t.split("").reverse().join("")}return n}function $(e,i){return e.length<=i?e:e.substr(0,e.lastIndexOf(" ",i))}const u={dice:"Dice","guess-timer":"Guess the Timer",link:"Share Link",pillory:"Pillory","random-events":"Random Events",tasks:"Tasks","temporary-opening":"Hygiene Opening","extended-wheel-of-fortune":"Extended Wheel of Fortune"};function g(e,i){let s="";if(e.key==="extension-enable")s=`Enable the extension '${u[e.params[0]]}'`;else if(e.key==="extension-disable")s=`Disable the extension '${u[e.params[0]]}'`;else if(e.key==="lock-time-modify"){const r=m(Math.abs(e.params[1]));s=e.params[0]==="modify"?e.params[1]>0?`[Lock] Add ${r} to the remaining time`:`[Lock] Remove ${r} from the remaining time`:e.params[0]==="multiply"?`[Lock] Multiply the remaining time by ${e.params[1]}`:`[Lock] Set the remaining time to ${r}`}else if(e.key==="lock-show_timer")s="[Lock] Show remaining time";else if(e.key==="lock-hide_timer")s="[Lock] Hide remaining time";else if(e.key==="lock-show_history")s="[Lock] Show lock history";else if(e.key==="lock-hide_history")s="[Lock] Hide lock history";else if(e.key==="lock-freeze")s="[Lock] Freeze the lock";else if(e.key==="lock-unfreeze")s="[Lock] Unfreeze the lock";else if(e.key==="lock-toggle_freeze")s="[Lock] Toggle the lock freeze status";else if(e.key==="lock-unlock")s="[Lock] Unlock the lock";else if(e.key==="share_link-requirement-modify")s=e.params[0]==="modify"?e.params[1]>0?`[Share Link] Increase the share link requirement by ${e.params[1]}`:`[Share Link] Decrease the share link requirement by ${e.params[1]}`:e.params[0]==="multiply"?`[Share Link] Multiply the share link requirement by ${e.params[1]}`:`[Share Link] Set the share link requirement to ${e.params[1]}`;else if(e.key==="share_link-add_time-modify"||e.key==="share_link-remove_time-modify"){const r=e.key==="share_link-add_time-modify"?"Add Time":"Remove Time",l=m(Math.abs(e.params[1]));s=e.params[0]==="modify"?e.params[1]>0?`[Share Link] Increase the share link '${r}' duration by ${l}`:`[Share Link] Decrease the share link '${r}' duration by ${l}`:e.params[0]==="multiply"?`[Share Link] Multiply the share link '${r}' duration by ${e.params[1]}`:`[Share Link] Set the share link '${r}' duration to ${l}`}else if(e.key==="share_link-logged_in-set")s=e.params[0]===!0?"[Share Link] Allow only logged-in users to vote on share links":"[Share Link] Allow anyone (including users not logged-in) to vote on share links";else if(e.key==="pillory-duration-modify"){const r=m(Math.abs(e.params[1]));s=e.params[0]==="modify"?e.params[1]>0?`[Pillory] Increase the pillory per-vote added duration by ${r}`:`[Pillory] Decrease the pillory per-vote added duration by ${r}`:e.params[0]==="multiply"?`[Pillory] Multiply the pillory per-vote added duration by ${e.params[1]}`:`[Pillory] Set the pillory per-vote added duration to ${r}`}else if(e.key==="pillory-put")s=`[Pillory] Put the wearer into the pillory for ${m(Math.abs(e.params[0]))} with the reason '${e.params[1]}'`;else if(e.key==="hygiene-unlock")s="[Hygiene Unlock] Perform a keyholder-initiated hygiene unlock";else if(e.key==="dice-regularity-set"){const r=m(e.params[0][1]);s=`[Dice] Set the dice regularity to mode '${e.params[0][0]}'`+(e.params[0][0]!=="unlimited"?` with regularity ${r}`:"")}else if(e.key==="dice-multiplier-modify"){const r=m(Math.abs(e.params[1]));s=e.params[0]==="modify"?e.params[1]>0?`[Dice] Increase the dice multiplier by ${r}`:`[Dice] Decrease the dice multiplier by ${r}`:e.params[0]==="multiply"?`[Dice] Multiply the dice multiplier by ${e.params[1]}`:`[Dice] Set the dice multiplier to ${r}`}else if(e.key==="tasks-regularity-set"){const r=m(e.params[0][1]);s=`[Tasks] Set the tasks regularity to mode '${e.params[0][0]}'`+(e.params[0][0]!=="unlimited"?` with regularity ${r}`:"")}else if(e.key==="tasks-task_points-modify")s=e.params[0]==="modify"?e.params[1]>0?`[Tasks] Increase the task points requirement by ${e.params[1]}`:`[Tasks] Decrease the task points requirement by ${e.params[1]}`:e.params[0]==="multiply"?`[Tasks] Multiply the task points requirement by ${e.params[1]}`:`[Tasks] Set the task points requirement to ${e.params[1]}`;else if(e.key==="tasks-task-add")s=`[Tasks] Add the task with text '${e.params[0]}' worth ${e.params[1]} points`;else if(e.key==="tasks-task-remove")s=`[Tasks] Remove the task with text '${e.params[0]}'`;else if(e.key==="random-events-difficulty")s=`[Random Events] Set the random events difficulty to '${e.params[0].charAt(0).toUpperCase()+e.params[0].slice(1)}'`;else if(e.key==="guess_timer-min_time-modify"){const r=m(Math.abs(e.params[1]));s=e.params[0]==="modify"?e.params[1]>0?`[Guess the Timer] Increase the minimum-added duration by ${r}`:`[Guess the Timer] Decrease the minimum-added duration by ${r}`:e.params[0]==="multiply"?`[Guess the Timer] Multiply the minimum-added duration by ${e.params[1]}`:`[Guess the Timer] Set the minimum-added duration to ${r}`}else if(e.key==="guess_timer-max_time-modify"){const r=m(Math.abs(e.params[1]));s=e.params[0]==="modify"?e.params[1]>0?`[Guess the Timer] Increase the maximum-added duration by ${r}`:`[Guess the Timer] Decrease the maximum-added duration by ${r}`:e.params[0]==="multiply"?`[Guess the Timer] Multiply the maximum-added duration by ${e.params[1]}`:`[Guess the Timer] Set the maximum-added duration to ${r}`}else if(e.key==="extended_wheel-setting"){const r=i.wheels[e.params[0]].display;s=`[Extended Wheel of Fortune] ${e.params[1].charAt(0).toUpperCase()+e.params[1].slice(1)} the setting ${e.params[2]} for the wheel '${r}'`}return s}export{k as a,m as b,g,a as r,f as s,$ as t};
