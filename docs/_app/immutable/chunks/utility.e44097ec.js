const y={"all-alphanumeric":"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789","upper-alphanumeric":"ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789","lower-alphanumeric":"abcdefghijklmnopqrstuvwxyz0123456789","all-alpha":"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ","upper-alpha":"ABCDEFGHIJKLMNOPQRSTUVWXYZ","lower-alpha":"abcdefghijklmnopqrstuvwxyz",numeric:"0123456789",symbols:"!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~"};function t(e,s="upper-alphanumeric"){let m="";const l=y[s],r=l.length;for(let i=0;i<e;i++)m+=l.charAt(Math.floor(Math.random()*r));return m}function a(e,s){return Math.floor(Math.random()*(s-e))+e}async function k(e){return new Promise(s=>{setTimeout(s,e)})}function p(e,s=!1){const m={day:86400,hour:3600,minute:60,second:1};s&&(m.second=1);const l={};let r=e;for(const[n,u]of Object.entries(m)){const d=Math.floor(r/u);r-=d*u,l[n]=d}const i=[];for(const[n,u]of Object.entries(l))if(u!==0){const d=u>1?"s":"";i.push(`${u} ${n}${d}`)}let o=i.join(", ");const h=o.split(",").length-1;if(h!==0)if(h===1)o=o.replace(", "," and ");else{let n=o.split("").reverse().join("");n=n.replace(" ,"," dna ,"),o=n.split("").reverse().join("")}return o!==""?o:"0 seconds"}window.generate=p;function $(e,s){return e.length<=s?e:e.substr(0,e.lastIndexOf(" ",s))}const f={dice:"Dice","guess-timer":"Guess the Timer",link:"Share Link",pillory:"Pillory","random-events":"Random Events",tasks:"Tasks","temporary-opening":"Hygiene Opening","extended-wheel-of-fortune":"Extended Wheel of Fortune"};function v(e){let s="";for(;;){const m=Math.floor(Math.random()*e.length),l=e.charAt(m),r=l.charCodeAt(0);let i="";if(r>=65&&r<=90)do i=t(1,"upper-alpha");while(i===l);else if(r>=97&&r<=122)do i=t(1,"lower-alpha");while(i===l);else if(r>=48&&r<=57)do i=t(1,"numeric");while(i===l);else if(r>=33&&r<=126)do i=t(1,"symbols");while(i===l);if(i!==""){const o=e.split("");o[m]=i,s=o.join("");break}}return s}function b(e){let s="";if(e.key==="resetLock")s="[Lock] Reset the lock";else if(e.key==="unlock")s="[Lock] Unlock the lock";else if(e.key==="freeze")s=`[Lock] ${e.params[0]===!0?"Freeze":e.params[0]===!1?"Unfreeze":"Toggle freeze on"} the lock`;else if(e.key==="pillory")s=`[Lock] Pillory for ${p(Math.abs(e.params[0]))}`;else if(e.key==="hygieneUnlock")s="[Lock] Perform a hygiene unlock";else if(e.key==="requestVerification")s="[Verification] Request a verification picture";else if(e.key==="assignTask")s=`[Tasks] Assign the task "${e.params[0].task}"`;else if(e.key==="assignTaskRandom")s=e.params[0]===void 0?"[Tasks] Assign a random task":"[Tasks] Have users vote on a task";else if(e.key==="modifyTasks")s="[Tasks] Modify the task list (too complex)";else if(e.key==="updateLockDuration"){const m=`${e.params[0]!=="multiply"?p(Math.abs(e.params[1])):e.params[1]}`,l=e.params[2]!==void 0?`${e.params[0]!=="multiply"?p(Math.abs(e.params[2])):e.params[2]}`:void 0,r=`${l?"between ":""}${e.params[1]<0?"-":""}${m}${l?", and ":""}${(e.params[2]??0)<0?"-":""}${l}`;s=e.params[0]==="modify"?`[Lock] Modify the remaining lock time by ${r}`:e.params[0]==="multiply"?`[Lock] Multiply the remaining lock time by ${r}`:`[Lock] Set the remaining lock time to ${r}`}else if(e.key==="updateLockSettings")s="[Lock] ",e.params[0]!==void 0&&(s+=`${e.params[0]?"Display":"Hide"} remaining lock time`,e.params[1]!==void 0&&(s+=", ")),e.params[1]!==void 0&&(s+=`${e.params[0]?"Hide":"Show"} time changes.`);else if(e.key==="disableExtension")s=`[Lock] Disable the extension '${f[e.params[0]]}'`;else if(e.key==="enableExtension")s=`[Lock] Enable the extension '${f[e.params[0]]}'`;else if(e.key==="resetTaskPoints")s="[Tasks] Reset the gained number of task points";else if(e.key==="shareLinkModifyKey"){const m=`${e.params[0]!=="nbVisits"&&e.params[1]!=="multiply"?p(Math.abs(e.params[2])):e.params[2]}`,l=e.params[3]!==void 0?`${e.params[0]!=="nbVisits"&&e.params[1]!=="multiply"?p(Math.abs(e.params[3])):e.params[3]}`:void 0,r=`${l?"between ":""}${m}${l?" and ":""}${l}`,i=e.params[0]==="nbVisits"?"number of required visits":e.params[0]==="timeToAdd"?"link add time":"link remove time";e.params[1]==="set"?s=`[Share Link] Set the ${i} to ${r}`:e.params[1]==="modify"?s=`[Share Link] ${e.params[2]>0?"Increase":"Decrease"} the ${i} by ${r}`:s=`[Share Link] Multiply the ${i} by ${r}`}else if(e.key==="shareLinkSetLoggedIn")s=e.params[0]===void 0?"[Share Link] Toggle the logged-in requirement":`[Share Link] ${e.params?"Enable":"Disable"} the logged-in requirement`;else if(e.key==="pilloryModifyDuration"){const m=`${e.params[0]!=="multiply"?p(Math.abs(e.params[1])):e.params[1]}`,l=e.params[2]!==void 0?`${e.params[0]!=="multiply"?p(Math.abs(e.params[2])):e.params[2]}`:void 0,r=`${l?"between ":""}${m}${l?" and ":""}${l}`;s=e.params[0]==="modify"?e.params[1]>0?`[Pillory] Add ${r} to the per-vote duration`:`[Pillory] Subtract ${r} from the per-vote duration`:e.params[0]==="multiply"?`[Pillory] Multiply the per-vote duration by ${r}`:`[Pillory] Set the per-vote duration to ${r}`}else if(e.key==="diceModifyDuration"){const m=`${e.params[0]!=="multiply"?p(Math.abs(e.params[1])):e.params[1]}`,l=e.params[2]!==void 0?`${e.params[0]!=="multiply"?p(Math.abs(e.params[2])):e.params[2]}`:void 0,r=`${l?"between ":""}${m}${l?" and ":""}${l}`;s=e.params[0]==="modify"?e.params[1]>0?`[Dice] Add ${r} to the duration multiplier`:`[Dice] Subtract ${r} from the duration multiplier`:e.params[0]==="multiply"?`[Dice] Multiply the duration multiplier by ${r}`:`[Dice] Set the duration multiplier to ${r}`}else if(e.key==="tasksModifyRequiredPoints"){const m=`${e.params[0]!=="multiply"?p(Math.abs(e.params[1])):e.params[1]}`,l=e.params[2]!==void 0?`${e.params[0]!=="multiply"?p(Math.abs(e.params[2])):e.params[2]}`:void 0,r=`${l?"between ":""}${m}${l?" and ":""}${l}`;s=e.params[0]==="modify"?e.params[1]>0?`[Tasks] Add ${r} to the required points`:`[Tasks] Subtract ${r} from the required points`:e.params[0]==="multiply"?`[Tasks] Multiply the required points by ${e.params[1]}`:`[Tasks] Set the required points to ${r}`}else if(e.key==="randomEventsModifyDifficulty")s=`[Random] Set the difficulty to ${e.params[0].charAt(0).toUpperCase()+e.params[0].slice(1)}`;else if(e.key==="guessTimerModifyKey"){const m=e.params[0]==="minRandomTime"?"minimum added duration":"maximum added duration",l=`${e.params[1]!=="multiply"?p(Math.abs(e.params[2])):e.params[2]}`,r=e.params[3]!==void 0?`${e.params[1]!=="multiply"?p(Math.abs(e.params[3])):e.params[3]}`:void 0,i=`${r?"between ":""}${l}${r?" and ":""}${r}`;s=e.params[1]==="modify"?e.params[2]>0?`[Guess] Add ${i} to the ${m}`:`[Guess] Subtract ${i} from the ${m}`:e.params[1]==="multiply"?`[Guess] Multiply the ${m} by ${i}`:`[Guess] Set the ${m} to ${i}`}return s}export{p as a,t as b,v as c,b as g,a as r,k as s,$ as t};
