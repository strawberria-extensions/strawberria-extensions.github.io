const y="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";function d(e){let s="";const t=y.length;for(let k=0;k<e;k++)s+=y.charAt(Math.floor(Math.random()*t));return s}function o(e,s){return Math.floor(Math.random()*(s-e))+e}async function g(e){return new Promise(s=>{setTimeout(s,e)})}function r(e,s=!1){const t={day:86400,hour:3600,minute:60};s&&(t.second=1);const k={};let f=e;for(const[i,n]of Object.entries(t)){const a=Math.floor(f/n);f-=a*n,k[i]=a}const h=[];for(const[i,n]of Object.entries(k))if(n!==0){const a=n>1?"s":"";h.push(`${n} ${i}${a}`)}let l=h.join(", ");const p=l.split(",").length-1;if(p!==0)if(p===1)l=l.replace(", "," and ");else{let i=l.split("").reverse().join("");i=i.replace(" ,"," dna ,"),l=i.split("").reverse().join("")}return l}function m(e,s){return e.length<=s?e:e.substr(0,e.lastIndexOf(" ",s))}function v(e){let s="";return e.key==="add_time"?s=`[Time] Add ${r(e.params[0])} to the session time.`:e.key==="remove_time"?s=`[Time] Remove ${r(e.params[0])} from the session time.`:e.key==="multiply_time"?s=`[Time] Multiply session time by ${e.params} times.`:e.key==="share_link-requirement-add"?s=`[Share link] Increase the share link visit requirement by ${e.params[0]}.`:e.key==="share_link-requirement-remove"?s=`[Share link] Decrease the share link visit requirement by ${e.params[0]}.`:e.key==="share_link-requirement-multiply"?s=`[Share link] Multiply the share link visit requirement by ${e.params[0]} times.`:e.key==="share_link-add_time-set"?s=`[Share link] Set share link "Time to add" duration to ${r(e.params[0])}.`:e.key==="share_link-remove_time-set"?s=`[Share link] Set share link "Time to remove" duration to ${r(e.params[0])}.`:e.key==="share_link-logged_in-set"?s=e.params[0]===!0?"[Share link] Only allow logged-in people to vote on share link visits.":"[Share link] Also allow not logged-in people to vote on share link visits.":e.key==="pillory-put"&&(s="[Pillory] Put the wearer into the pillory."),e.key==="pillory-duration-set"?s=`[Pillory] Set pillory add time per vote to ${r(e.params[0])}.`:e.key==="hygiene-unlock"?s="[Hygiene Unlock] Temporarily hygiene unlock through keyholder (doesn't affect interval)":e.key==="dice-regular_actions-set"&&(s=`[Dice] Set the dice regular action to mode '${e.params[0]}'`+(e.params[0]!=="unlimited"?` with regularity ${r(e.params[1])}`:"")+"."),e.key==="dice-multiplier-set"?s=`[Dice] Set the dice time multiplier to ${r(e.params[0])}.`:e.key==="extended_wof-regular_actions-set"?s=`[Extended Wheel of Fortune] Set the regular action for the wheel '${e.params[0]}' to mode '${e.params[0]}'`+(e.params[1]!=="unlimited"?` with regularity ${r(e.params[2])}`:"")+".":e.key==="tasks-regular_actions-set"?s=`[Tasks] Set the tasks regular action to mode '${e.params[0]}'`+(e.params[0]!=="unlimited"?` with regularity ${r(e.params[1])}`:"")+".":e.key==="tasks-task_points-add"?s=`[Tasks] Increase the task points requirement by ${e.params[0]}.`:e.key==="tasks-task_points-remove"?s=`[Tasks] Decrease the task points requirement by ${e.params[0]}.`:e.key==="tasks-task_points-multiply"?s=`[Tasks] Multiply the task points requirement by ${e.params[0]} times.`:e.key==="tasks-task-add"?s=`[Tasks] Add the following task: ${e.params[0]}`:e.key==="tasks-task-remove"?s=`[Tasks] Remove the following task: ${e.params[0]}`:e.key==="lock-freeze"?s="[Lock] Freeze the lock (if unfrozen)":e.key==="lock-unfreeze"?s="[Lock] Unfreeze the lock (if frozen)":e.key==="lock-toggle_freeze"?s="[Lock] Toggle freeze on the lock (freeze -> unfreeze, and vice versa)":e.key==="lock-unlock"&&(s="[Lock] Fully unlock the lock"),s}export{v as a,r as b,d as g,o as r,g as s,m as t};
